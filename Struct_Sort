#include <stdio.h>
#include <string.h>

struct class 
	{ 
		char ser_name[20];
		char name[20];
		int year;
		char letter;
		char marks[20];
		double between;
		double centre;
		int member;

	};

void reverse(int size,struct class student[size])
{
	int i=0,j=0;
	struct class temp[size];
	for(i=0;i<size;i++)
	{
		temp[i]=student[i];
	}
	for(i=0,j=size-1;j>=0,i<size;j--,i++)
	{
		student[i]=temp[j];
	}
}

	void qs_struct_sername(struct class items[], int left, int right)
{

  register int i, j;
  char *x;
  struct class temp;

  i = left; j = right;
  x = items[(left+right)/2].ser_name;

  do {
    while((strcmp(items[i].ser_name,x) < 0) && (i < right)) i++;
    while((strcmp(items[j].ser_name,x) > 0) && (j > left)) j--;
    if(i <= j) {
      temp = items[i];
      items[i] = items[j];
      items[j] = temp;
      i++; j--;
    }
  } while(i <= j);

  if(left < j) qs_struct_sername(items, left, j);
  if(i < right) qs_struct_sername(items, i, right);
}

void qs_struct_centre(struct class s_arr[], int first,int last)
{
    int i = first, j = last;
    double x = s_arr[(first + last) / 2].centre;
    struct class temp;
 
    do {
        while (s_arr[i].centre < x) i++;
        while (s_arr[j].centre > x) j--;
 
        if(i <= j) {
            if (s_arr[i].centre > s_arr[j].centre) 
            	{
            		temp=s_arr[i];
            		s_arr[i]=s_arr[j];
            		s_arr[j]=temp;
            	}
            i++;
            j--;
        }
    } while (i <= j);
 
    if (i < last) qs_struct_centre(s_arr,i,last);
    if (first < j) qs_struct_centre(s_arr,first,j);
}


void compare(int size,struct class student[size],double* point_mid,int* mem)
{
	int i=0,j=0,count=1;	
	double class_mid=0;
	
	for(i=0;i<size;i++)
	{
		count=1;
		class_mid=student[i].between;
		for(j=0;j<size;j++)
		{
			if(student[i].year==student[j].year && student[i].letter==student[j].letter && j!=i )
			{
				class_mid+=student[j].between;
				count++;
			}
		}
	
		*(mem+i)=count;
		*(point_mid+i)=class_mid/count;
	}
}


double middle(int* numbers,int small_size)
{
	int i;
	double mid=0;
	for(i=0;i<small_size;i++)
	{
		mid+=*(numbers+i);
	}
	mid=mid/small_size;
	return mid;
} 

int* fix(char* point,int small_size)
{
	int arr[small_size],i,j=0;
	int* numbers=NULL;	
	
	for(i=0;i<20;i++)
	{
		if(*(point+i)!=',')
		{
			if(j==small_size)
				break;
			arr[j]=*(point+i)-48;
			j++;
			
		}	
	}
	numbers=(int*)arr;

	return numbers;
}

void main()
{	
	int small_size=1,size=0,lim=0,i=0;
	double class_mid,mid;
	
	double* point_mid=NULL;
	char* point=NULL;
	int* numbers=NULL;
	int* mem=NULL;

	char *file_name = "four.txt"; 
	FILE *file;
	
	struct class student [8];
	
	file = fopen (file_name, "r");
		
		if(file == 0)
	{
		printf("не могу открыть файл '%s'",file_name);
	}


	i=0;
	printf("\nArray before sort:\n\n");
	while (fscanf(file,"%s%s%i%c%s",student[i].ser_name,student[i].name,&(student[i].year),&(student[i].letter),student[i].marks)!=EOF)
	{
		
		printf("%s %s %i %c %s\n",student[i].ser_name,student[i].name,student[i].year,student[i].letter,student[i].marks);
		i++;
		size++;
	}
	
	for(i=0;i<20;i++)
		{
			if(student[0].marks[i]==',')
				small_size++;
		}

	double mid_arr[size];
	int member_arr[size];

	for(i=0;i<size;i++)
	{
		point=&student[i].marks[0];
		numbers=fix(point,small_size);
		mid=middle(numbers,small_size);
		student[i].between=mid;
	}
	
	point_mid=&mid_arr[0];
	mem=&member_arr[0];

	compare(size,student,point_mid,mem);

	for(i=0;i<size;i++)
	{
		student[i].centre=*(point_mid+i);
		student[i].member=*(mem+i);
	}

	qs_struct_centre(student,0,size-1);

	for(i=0;i<size;i+=student[i].member)
	{
		if(student[i].member>1)
		qs_struct_sername(student,i,i+student[i].member-1);
	}
	
	reverse(size,student);

		printf("\nArray after sort:\n\n");
		for(i=0; i<size;i++)
		{
			printf("%s %s %i%c %s %f\n",student[i].ser_name,student[i].name,student[i].year,student[i].letter,student[i].marks,student[i].centre);
		}
		

}
